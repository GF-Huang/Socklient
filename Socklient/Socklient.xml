<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Socklient</name>
    </assembly>
    <members>
        <member name="F:Socklient.Command.Bind">
            <summary>
            Unsupported yet
            </summary>
        </member>
        <member name="F:Socklient.SocksStatus.Initial">
            <summary>
            Before handshake and authentication.
            </summary>
        </member>
        <member name="F:Socklient.SocksStatus.Connected">
            <summary>
            After handshake, authentication, and send <see cref="F:Socklient.Command.Connect"/> command.
            </summary>
        </member>
        <member name="F:Socklient.SocksStatus.Disposed">
            <summary>
            Disposed, can not reuse.
            </summary>
        </member>
        <member name="T:Socklient.ProtocolErrorException">
            <summary>
            The exception that is thrown when the SOCKS5 server replies unexpected response.
            </summary>
        </member>
        <member name="T:Socklient.AuthenticationException">
            <summary>
            The exception that is thrown when authentication failed.
            </summary>
        </member>
        <member name="T:Socklient.SocksClient">
            <summary>
            A SOCKS5 client.
            </summary>
        </member>
        <member name="P:Socklient.SocksClient.BoundAddress">
            <summary>
            The BND.ADDR field of the response from server.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:Socklient.SocksClient"/> is not connected or associated.</exception>
        </member>
        <member name="P:Socklient.SocksClient.BoundPort">
            <summary>
            The BND.PORT field of the response from server.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:Socklient.SocksClient"/> is not connected or associated.</exception>
        </member>
        <member name="P:Socklient.SocksClient.TcpClient">
            <summary>
            Get underlying <see cref="T:System.Net.Sockets.TcpClient"/> for more fine-grained control in CONNECT mode.
            </summary>
        </member>
        <member name="P:Socklient.SocksClient.UdpClient">
            <summary>
            Get underlying <see cref="T:System.Net.Sockets.UdpClient"/> for more fine-grained control in UDP-ASSOCIATE mode.
            This property is null in CONNECT mode. 
            </summary>
        </member>
        <member name="M:Socklient.SocksClient.#ctor(System.Net.IPAddress,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Initializes a new instance of <see cref="T:Socklient.SocksClient"/> with the specified SOCKS5 <paramref name="server"/> and 
            <paramref name="port"/>, <paramref name="credential"/> is optional.
            </summary>
            <param name="server">The address of the SOCKS5 server.</param>
            <param name="port">The port of the SOCKS5 server.</param>
            <param name="credential">Optional credential for username/password authentication.</param>
        </member>
        <member name="M:Socklient.SocksClient.#ctor(System.String,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Initializes a new instance of <see cref="T:Socklient.SocksClient"/> with the specified SOCKS5 <paramref name="server"/> and 
            <paramref name="port"/>, <paramref name="credential"/> is optional.
            </summary>
            <param name="server">The hostname of the SOCKS5 server.</param>
            <param name="port">The port of the SOCKS5 server.</param>
            <param name="credential">Optional credential for username/password authentication.</param>
        </member>
        <member name="M:Socklient.SocksClient.Dispose">
            <summary>
            Dispose the underlying <see cref="P:Socklient.SocksClient.TcpClient"/> and <see cref="P:Socklient.SocksClient.UdpClient"/>.
            </summary>
        </member>
        <member name="M:Socklient.SocksClient.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Do handshake and authentication (if need), then send a <see cref="F:Socklient.Command.Connect"/> command to the SOCKS5 server.
            </summary>
            <param name="address">The destination address to communicating via SOCKS5 server.</param>
            <param name="port">The destination port to communicating via SOCKS5 server.</param>
            <param name="token">The token to monitor for cancellation. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
        </member>
        <member name="M:Socklient.SocksClient.ConnectAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Do handshake and authentication (if need), then send a <see cref="F:Socklient.Command.Connect"/> command to the SOCKS5 server.
            </summary>
            <param name="domain">The destination domain to communicating via SOCKS5 server.</param>
            <param name="port">The destination port to communicating via SOCKS5 server.</param>
            <param name="token">The token to monitor for cancellation. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
        </member>
        <member name="M:Socklient.SocksClient.GetStream">
            <summary>
            Get the <see cref="T:System.Net.Sockets.NetworkStream"/> of the underlying <see cref="P:Socklient.SocksClient.TcpClient"/>.
            </summary>
        </member>
        <member name="M:Socklient.SocksClient.UdpAssociateAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Do handshake and authentication (if need), then send a <see cref="F:Socklient.Command.UdpAssociate"/> command to the SOCKS5 server.
            <para>
            The <paramref name="address"/> and <paramref name="port"/> fields contain the address and port that the client expects to use to send UDP datagrams on for the association. The server MAY use this information to limit access to the association. If the client is not in possesion of the information at the time of UDP Associate (for example, most home users are behind NAT, there is no way to determine the public IP and port they will use before sending), the client MUST use a port number and address of all zeros.
            </para>
            </summary>
            <param name="address">The address that the client expects to use to send UDP datagrams on for the association. Alias of DST.ADDR defined in RFC 1928 UDP Associate.</param>
            <param name="port">The port that the client expects to use to send UDP datagrams on for the association. Alias of DST.PORT defined in RFC 1928 UDP Associate.</param>
            <param name="token">The token to monitor for cancellation. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
        </member>
        <member name="M:Socklient.SocksClient.SendAsync(System.ReadOnlyMemory{System.Byte},System.String,System.Int32)">
            <summary>
            Send datagram to destination domain and port via SOCKS server.
            </summary>
            <param name="datagram">The datagram to send.</param>
            <param name="domain">The destination domain.</param>
            <param name="port">The destination port.</param>
        </member>
        <member name="M:Socklient.SocksClient.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.IPAddress,System.Int32)">
            <summary>
            Send datagram to destination address and port via SOCKS server.
            </summary>
            <param name="datagram">The datagram to send.</param>
            <param name="address">The destination address.</param>
            <param name="port">The destination port.</param>
        </member>
        <member name="M:Socklient.SocksClient.ReceiveAsync">
            <summary>
            Receive datagram via SOCKS server.
            </summary>
        </member>
        <member name="T:Socklient.UdpReceiveMemory">
            <summary>
            Presents SOCKS5 server UDP replied result information from a call to the <see cref="M:Socklient.SocksClient.ReceiveAsync"/> method.
            </summary>
        </member>
        <member name="P:Socklient.UdpReceiveMemory.Memory">
            <summary>
            Gets the <see cref="T:System.ReadOnlyMemory`1"/> with the data received in the UDP packet.
            </summary>
        </member>
        <member name="P:Socklient.UdpReceiveMemory.RemoteEndPoint">
            <summary>
            Gets the remote endpoint from which the UDP packet was received.
            </summary>
        </member>
    </members>
</doc>
